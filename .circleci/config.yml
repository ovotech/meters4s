version: 2.1

executors:
  docker:
    docker:
      - image: circleci/openjdk:11-jdk
    environment:
      JAVA_OPTS: "-Xmx1g -XX:MaxMetaspaceSize=1g -XX:MetaspaceSize=1g -XX:+CMSClassUnloadingEnabled"

commands:
  generate_sbt_cache_key:
    description: "Generate sbt cache key"
    steps:
      - run: md5sum project/build.properties project/plugins.sbt build.sbt > .sbt_cache_key

  store_sbt_cache:
    description: "Store sbt cache"
    steps:
      - generate_sbt_cache_key
      - save_cache:
          key: dependencies-{{ checksum ".sbt_cache_key" }}
          paths:
            - /home/circleci/.ivy2
            - /home/circleci/.sbt
            - /home/circleci/.cache
            - /home/circleci/.coursier
            - /home/circleci/.m2

  restore_sbt_cache:
    description: "Restore sbt cache"
    steps:
      - generate_sbt_cache_key
      - restore_cache:
          keys:
            - dependencies-{{ checksum ".sbt_cache_key" }}
            - dependencies

  add_github_host_ssh_key:
    description: "Add the github host SSH key"
    steps:
      - run:
          name: Adding the github host SSH key
          command: |
            echo 'Adding the github host SSH key...'
            mkdir -p -m 0700 ~/.ssh/
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  configure_git_credentials:
    description: "Configure git credentials"
    steps:
      - run:
          name: Configure git credentials
          command: |
            git config user.name ovo-comms-circleci
            git config user.email "hello.comms@ovoenergy.com"

  unit_test:
    description: run module unit tests
    parameters:
      module_name:
        type: string
    steps:
      - checkout

      - restore_sbt_cache

      - attach_workspace:
          at: .

      - run:
          command: sbt +<< parameters.module_name >>/test

      - store_test_results:
          path: << parameters.module_name >>/target/test-reports

jobs:
  build:
    executor: docker

    steps:
      - checkout

      - restore_sbt_cache
      - run: sbt update
      - store_sbt_cache

      - run: sbt scalafmtCheckAll
      - run: sbt headerCheckAll
      - run: sbt +test:compile

      - persist_to_workspace:
          root: .
          paths:
            - target
            - project/target
            - project/project/target

  core_unit_test:
    executor: docker

    steps:
      - unit_test:
          module_name: core

  datadog_unit_test:
    executor: docker

    steps:
      - unit_test:
          module_name: datadog

  statsd_unit_test:
    executor: docker

    steps:
      - unit_test:
          module_name: statsd

workflows:
  main:
    jobs:
      - build

      - core_unit_test:
          requires:
            - build

      - datadog_unit_test:
          requires:
            - build

      - statsd_unit_test:
          requires:
            - build
